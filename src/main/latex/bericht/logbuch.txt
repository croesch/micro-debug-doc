18.10.2011 (4,5 h)
	- Notizen vom Treffen in Computer einpflegen
	- Konzept anpassen
	- Simulator-Sourcen anschauen/analysieren
	- ALU programmiert
07.11.2011 (5,5 h)
	- shifter programmiert
	- Berechner fﾃｼr nﾃ､chsten MPC programmiert
	- sourcen Mic1 angeschaut, versucht Parallelen zu ziehen
10.11.2011 (4 h)
	- Decoder eingebaut und Reader abgesplittet
	- Im Decoder Angefangen mit:
	  	- Tests fﾃｼr den Decoder zu schreiben
		- Fehler zu beheben
		- Duplizierten Code zu entfernen
11.11.2011 (1 h)
	- Weitere Tests fﾃｼr Decoder geschrieben
	- Angefangen Decoder-Code zu kommentieren
12.11.2011 (8 h)
	- Decoder-Code fertig kommentiert
	- Tests fﾃｼr Decoder geschrieben
	- Code Refactoring fﾃｼr Decoder durchgefﾃｼhrt
	- Warnungen (CheckStyle) entfernt
13.11.2011 (1,5 h)
	- Refactoring: Decoder in eigene Klasse gepackt
19.11.2011 (4 h)
	- Register implementiert
	- Control-Store angefangen zu implementieren (Einlesen einer Binﾃ､r-Datei, mit Fehlerfﾃ､llen und Tests)
20.11.2011 (1 h)
	- Control-Store weiter implementiert (Ausgeben gespeicherter Befehle)
21.11.2011 (3 h)
	- Erster Entwurf fﾃｼr Mic1-Prozessor-Klasse und Memory-Klasse erstellt
	- API von Shifter und NextMPCCalculator angepasst (BitSet eliminiert und zwei Methoden aus getOutput() erstellt)
	- Verilog-, Java- und C++-Code analysiert vor allem in Bezug auf den Speicher
23.11.2011 (5,5 h)
	- Entwicklung des Hauptspeichers, vor allem mit Einlesemﾃｶglichkeit von Binﾃ､rdateien und Untersuchungen der vorhandenen Codes (Java, C++ der anderen Projekte)
	- Utility Klasse erstellt, um wiederkehrende Elemente zu sammeln
26.11.2011 (6,5 h)
	- Entwicklung des Output abgeschlossen
	- LaTeX Dokumentation zu Projekt hinzugefﾃｼgt
	- Input entwickelt
	* Test fﾃｼr Input sehr lange versucht zu entwickeln (InputStream vs. System.in)
27.11.2011 (0,5 h)
	- Input in Hauptspeicher integriert, Speicher damit abgeschlossen
01.12.2011 (2 h)
	- Tests fﾃｼr Prozessor geschrieben (Hi!\n und Performance)
02.12.2011 (3 h)
	- Logger mit Konfiguration angebunden
	- Argumente angebunden
	- i18n-Mechanismus angebunden inklusive xml-Datei
	- Printer implementiert, als Schnittstelle zur Konsolenausgabe
03.12.2011 (6,5 h)
	- Anzahl der Programm-Argumente implementiert (mic1+ijvm+X | V/H)
	- Argument --unbuffered-output implementiert
	- Argument --help implementiert
	- Einlesen der ijvm- und mic1-Datei in main-Methode implementiert, inkl. Fehlerfﾃ､llen
	- Instruktionen, Parameter fﾃｼr Debugger implementiert
	- Debugger implementiert und integriert
	- entsprechende Tests
	- (keine ausreichenden Integrationstests)
04.12.2011 (3,5 h)
	- Bericht ﾃｼber Werkzeuge git und maven geschrieben
12.01.2012 (0,5 h)
	- Begrﾃｼﾃ殷ngsnachricht hinzugefﾃｼgt
14.01.2012 (9 h)
	- Startnachricht hinzugefﾃｼgt
	- RUN Kommando implementiert
	- --output-file Argument implementiert
	- Properties-Datei erstellt und Zugriff programmiert
	- Integrationstests fﾃｼr Prozessor/Debugger verbessert
15.01.2012 (4 h)
	- Instruktionen ls-reg, trace-reg und untrace-reg implementiert
16.01.2012 (2,5 h)
	- Instruktionen micro-step und set implementiert
	- Maximale Grﾃｶﾃ歹 des Speichers in die Properties aufgenommen
21.01.2012 (2,5 h)
	- Instruktionen trace-mic, untrace-mic und set-mem implementiert
22.01.2012 (7,5 h)
	- Vorbereitungen fﾃｼr die Implementierung von ls-macro-code getroffen
23.01.2012 (3 h)
	- Groﾃ殳eil von ls-macro-code implementiert, Designentscheidung notwendig, was output betrifft, ls-macro-code ohne Argumente schon mﾃｶglich
24.01.2012 (2 h)
	- Code endlich Java 5 kompatibel gemacht und plattformunabhängig (lf)
25.01.2012 (3,5 h)
	- Treffen und Refactoring
26.01.2012 (3 h)
	- ls-macro-code fertig implementiert
27.01.2012 (3,5 h)
	- RESET und BREAK reg val implementiert
	- Teststruktur verbessert
	- UserInstruction Abbruch bei falscher Parameterzahl eingeführt
28.01.2012 (2,5 h)
	- LS-BREAK implementiert
	- Issues auf github angelegt, für die besprochenen noch zu erledigenden Aufgaben
	- #1 (Argument.ERROR_UNKNOWN show help), #3 (Parameter.NUMBER change format) erledigt
29.01.2012 (3 h)
	- STEP und LS-MEM implementiert
30.01.2012 (2 h)
	- RM-BREAK implementiert
03.02.2012 (3 h)
	- TRACE-MAC und UNTRACE-MAC implementiert
	- bisschen Kosmetik
04.02.2012 (3 h)
	- MACRO-BREAK und MICRO-BREAK implementiert
05.02.2012 (4 h)
	- LS-STACK und LS-MICRO-CODE implementiert
	- #8 Ausgabe vor dem Lesen einer Eingabe hinzugefügt -> Unterscheidung Prozessor, Debugger
06.02.2012 (2 h)
	- Treffen

07.02.2012 (2 h)
	- Code-Review
08.02.2012 (3,5 h)
	- Vorbereitungen für TRACE-VAR und UNTRACE-VAR implementiert
09.02.2012 (1,5 h)
	- TRACE-VAR und UNTRACE-VAR implementiert
10.02.2012 (2 h)
	- #2 hide details of FileFormatException from the user, log details
	- #19 Reset Output and Input buffers when resetting processor
11.02.2012
	- #15 Improve naming
12.02.2012 (1 h)
	- #4 Print traced register only when value changes
	- #12 LS-STACK don't show value at initial SP value
	- eigenes Repository für Dokumentation und eines für GUI angelegt
13.02.2012 (4,5 h)
	- #16 Improve implementation of Memory
	- (#17 Splitt class Mic1)
14.02.2012 (1 h)
	- #17 abgeschlossen
15.02.2012 (3 h)
	- #18 Argument#OUTPUT_FILE doesn't close opened stream
	- sonar aktualisiert
	- Maven Informationen erweitert (pom)
	- Release 0.1 durchgeführt
16.02.2012 (2,5 h)
	- Startskripte hinzugefügt für Windows und Linux
	- pom.xml angepasst, um gewisse Dateien nicht ins .jar zu packen
17.02.2012 (4 h)
	- #21 Exception when executing LS-MACRO-CODE
	- #20 Settings - provide default values
	- #5 IJVMCommandArgument.LABEL - improve representation
	- README für GitHub geschrieben
18.02.2012 (2 h)
	- LIESMICH aus README erstellt
	- Version 0.2 erstellt und Dateien hochgeladen
19.02.2012 (3 h)
	- #24 Remove IDIV from ijvm.conf
	- #23 Fix classpath problem in start scripts
	- micro-debug-doc#3 Add note how to change ijvm.conf
	- Version 0.2.1 erstellt und Dateien hochgeladen
	- Fix getestet (Linux und Windows)
	- Abgabe I
22.02.2012 (2,5h)
	- #25 Split class Parameter
	- #22 Remove JavaDoc warnings
	- #26 für XML-Dateien implementiert (ohne Tests)
23.02.2012 (2 h)
	- #26 Improve resource management
25.02.2012 (3 h)
	- Entwicklungsumgebung für GUI-Projekt eingerichtet
28.02.2012 (4,5 h)
	- Zeitplan für GUI-Entwicklung aufgestellt
	- GUI#2 Command line arguments
02.03.2012 (2 h)
	- GUI#3 About frame - angefangen
03.03.2012 (2,5 h)
	- GUI#3 About frame - fertig
09.03.2012 (5,5 h)
	- GUI#4 Frame before starting debugger - angefangen
10.03.2012 (3,5 h)
	- GUI#4 Frame before starting debugger - fertig
13.03.2012 (1 h)
	- GUI#5 umgeplant, Label Erweiterungen statt Panel --> NumberedLabel begonnen
14.03.2012 (2h)
	- GUI#5 Implement KeyValuePanel -> NumberedLabel fertig
	- GUI#7 Implement Mic1 output component
17.03.2012 (3,5 h)
	- GUI#6 Implement Mic1 input component 
	- GUI#13 Implement component for output of the debugger
	- #27 Extend Exceptions to distinguish between error in micro code and macro code
	- #27 GUI angepasst, so dass Dateipfad beim Neuaufbau des Startframes bestehen bleibt, wenn nicht falsch
19.03.2012 (3 h)
	- GUI#8 Implement a component that is able to view line numbers
20.03.2012 (3 h)
	- GUI#9 Analyse und Entwurf eines Rulers für Breakpoints
21.03.2012 (2,5 h)
	- GUI#9 Implement a ruler for breakpoints
24.03.2012 (1,5 h)
	- GUI#18 Add abstraction layer to line number viewing component
30.03.2012 (2 h)
	- GUI#10 Implement a code area - angefangen
31.03.2012 (7,5 h)
	- GUI#10 Implement a code area - weiter implementiert
	- GUI#11 Implement code area for micro code
	- GUI#19 Mark inherited JavaDoc
02.04.2012 (1 h)
	- Besprechung
03.04.2012 (2,5 h)
	- GUI#10 Implement a code area - noch Highlight eingefügt
05.04.2012 (2,5 h)
	- GUI#12 Implement code area for macro code
06.04.2012 (3 h)
	- #33 Mark inherited JavaDoc comments
	- #28 Script is only executable from same directory
	- Nullable/NotNull-Annotation erstellt
07.04.2012 (2 h)
	- GUI#15 Plan erstellt über weiteres Vorgehen
	- GUI#15 MDScrollPane erstellt
08.04.2012 (2 h)
	- GUI#15 MDSplitPane erstellt
	- GUI#15 MDPanel erstellt
	- GUI#15 grundlegende Aufteilung des Frames implementiert
09.04.2012 (3 h)
	- GUI#15 MDCheckBox erstellt
	- GUI#15 RegisterPanel implementiert
10.04.2012 (7 h)
	- #14 Implement breakpoint for registers without value
	- GUI#15 RegisterController implementiert
	- GUI#15 MemoryPanel implementiert
	- GUI#21 Konstruktoren zu MDLabel und NumberLabel hinzugefügt
	- !!! Stunden auf der Suche nach Performance-Leak verbracht !!!
	-     --> kein Ergebnis
